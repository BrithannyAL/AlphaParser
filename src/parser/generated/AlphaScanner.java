// Generated from C:/Users/brije/Documents/Proyectos_Java/AlphaParser/AlphaScanner.g4 by ANTLR 4.13.1
package parser.generated;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue", "this-escape"})
public class AlphaScanner extends Lexer {
	static { RuntimeMetaData.checkVersion("4.13.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		IF=1, THEN=2, ELSE=3, WHILE=4, DO=5, LET=6, IN=7, BEGIN=8, END=9, CONST=10, 
		VAR=11, ASSING=12, NOT_EQ=13, VERGIRILLA=14, TWODOTS=15, PIZQ=16, PDER=17, 
		PLUS=18, MINUS=19, ASTERISK=20, SLASH=21, PERCENT=22, EQUAL=23, LESSTHAN=24, 
		GREATERTHAN=25, LESSEQUALTO=26, GREATEREQUALTO=27, COMADOTS=28, COMA=29, 
		ID=30, NUM=31, WS=32, COMMENT=33;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"IF", "THEN", "ELSE", "WHILE", "DO", "LET", "IN", "BEGIN", "END", "CONST", 
			"VAR", "ASSING", "NOT_EQ", "VERGIRILLA", "TWODOTS", "PIZQ", "PDER", "PLUS", 
			"MINUS", "ASTERISK", "SLASH", "PERCENT", "EQUAL", "LESSTHAN", "GREATERTHAN", 
			"LESSEQUALTO", "GREATEREQUALTO", "COMADOTS", "COMA", "ID", "NUM", "LETTER", 
			"DIGIT", "WS", "COMMENT"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, null, null, null, null, null, null, null, null, null, null, null, 
			"':='", null, "'~'", "':'", "'('", "')'", "'+'", "'-'", "'*'", "'/'", 
			"'%'", "'=='", "'<'", "'>'", "'<='", "'>='", "';'", "','"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "IF", "THEN", "ELSE", "WHILE", "DO", "LET", "IN", "BEGIN", "END", 
			"CONST", "VAR", "ASSING", "NOT_EQ", "VERGIRILLA", "TWODOTS", "PIZQ", 
			"PDER", "PLUS", "MINUS", "ASTERISK", "SLASH", "PERCENT", "EQUAL", "LESSTHAN", 
			"GREATERTHAN", "LESSEQUALTO", "GREATEREQUALTO", "COMADOTS", "COMA", "ID", 
			"NUM", "WS", "COMMENT"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public AlphaScanner(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "AlphaScanner.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000!\u00fd\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002\u0001"+
		"\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002\u0004"+
		"\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002\u0007"+
		"\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002\u000b"+
		"\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e\u0002"+
		"\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011\u0002"+
		"\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014\u0002"+
		"\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017\u0002"+
		"\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002\u001a\u0007\u001a\u0002"+
		"\u001b\u0007\u001b\u0002\u001c\u0007\u001c\u0002\u001d\u0007\u001d\u0002"+
		"\u001e\u0007\u001e\u0002\u001f\u0007\u001f\u0002 \u0007 \u0002!\u0007"+
		"!\u0002\"\u0007\"\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0003"+
		"\u0000L\b\u0000\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001"+
		"\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0003\u0001V\b\u0001\u0001"+
		"\u0002\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002\u0001"+
		"\u0002\u0001\u0002\u0003\u0002`\b\u0002\u0001\u0003\u0001\u0003\u0001"+
		"\u0003\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003\u0001"+
		"\u0003\u0001\u0003\u0003\u0003l\b\u0003\u0001\u0004\u0001\u0004\u0001"+
		"\u0004\u0001\u0004\u0003\u0004r\b\u0004\u0001\u0005\u0001\u0005\u0001"+
		"\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0003\u0005z\b\u0005\u0001"+
		"\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0003\u0006\u0080\b\u0006\u0001"+
		"\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001"+
		"\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0003\u0007\u008c\b\u0007\u0001"+
		"\b\u0001\b\u0001\b\u0001\b\u0001\b\u0001\b\u0003\b\u0094\b\b\u0001\t\u0001"+
		"\t\u0001\t\u0001\t\u0001\t\u0001\t\u0001\t\u0001\t\u0001\t\u0001\t\u0003"+
		"\t\u00a0\b\t\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0003\n\u00a8"+
		"\b\n\u0001\u000b\u0001\u000b\u0001\u000b\u0001\f\u0001\f\u0001\f\u0001"+
		"\f\u0001\f\u0003\f\u00b2\b\f\u0001\r\u0001\r\u0001\u000e\u0001\u000e\u0001"+
		"\u000f\u0001\u000f\u0001\u0010\u0001\u0010\u0001\u0011\u0001\u0011\u0001"+
		"\u0012\u0001\u0012\u0001\u0013\u0001\u0013\u0001\u0014\u0001\u0014\u0001"+
		"\u0015\u0001\u0015\u0001\u0016\u0001\u0016\u0001\u0016\u0001\u0017\u0001"+
		"\u0017\u0001\u0018\u0001\u0018\u0001\u0019\u0001\u0019\u0001\u0019\u0001"+
		"\u001a\u0001\u001a\u0001\u001a\u0001\u001b\u0001\u001b\u0001\u001c\u0001"+
		"\u001c\u0001\u001d\u0003\u001d\u00d8\b\u001d\u0001\u001d\u0001\u001d\u0001"+
		"\u001d\u0001\u001d\u0005\u001d\u00de\b\u001d\n\u001d\f\u001d\u00e1\t\u001d"+
		"\u0001\u001e\u0004\u001e\u00e4\b\u001e\u000b\u001e\f\u001e\u00e5\u0001"+
		"\u001f\u0001\u001f\u0001 \u0001 \u0001!\u0004!\u00ed\b!\u000b!\f!\u00ee"+
		"\u0001!\u0001!\u0001\"\u0001\"\u0001\"\u0001\"\u0005\"\u00f7\b\"\n\"\f"+
		"\"\u00fa\t\"\u0001\"\u0001\"\u0000\u0000#\u0001\u0001\u0003\u0002\u0005"+
		"\u0003\u0007\u0004\t\u0005\u000b\u0006\r\u0007\u000f\b\u0011\t\u0013\n"+
		"\u0015\u000b\u0017\f\u0019\r\u001b\u000e\u001d\u000f\u001f\u0010!\u0011"+
		"#\u0012%\u0013\'\u0014)\u0015+\u0016-\u0017/\u00181\u00193\u001a5\u001b"+
		"7\u001c9\u001d;\u001e=\u001f?\u0000A\u0000C E!\u0001\u0000\u0003\u0002"+
		"\u0000AZaz\u0003\u0000\t\n\r\r  \u0002\u0000\n\n\r\r\u010d\u0000\u0001"+
		"\u0001\u0000\u0000\u0000\u0000\u0003\u0001\u0000\u0000\u0000\u0000\u0005"+
		"\u0001\u0000\u0000\u0000\u0000\u0007\u0001\u0000\u0000\u0000\u0000\t\u0001"+
		"\u0000\u0000\u0000\u0000\u000b\u0001\u0000\u0000\u0000\u0000\r\u0001\u0000"+
		"\u0000\u0000\u0000\u000f\u0001\u0000\u0000\u0000\u0000\u0011\u0001\u0000"+
		"\u0000\u0000\u0000\u0013\u0001\u0000\u0000\u0000\u0000\u0015\u0001\u0000"+
		"\u0000\u0000\u0000\u0017\u0001\u0000\u0000\u0000\u0000\u0019\u0001\u0000"+
		"\u0000\u0000\u0000\u001b\u0001\u0000\u0000\u0000\u0000\u001d\u0001\u0000"+
		"\u0000\u0000\u0000\u001f\u0001\u0000\u0000\u0000\u0000!\u0001\u0000\u0000"+
		"\u0000\u0000#\u0001\u0000\u0000\u0000\u0000%\u0001\u0000\u0000\u0000\u0000"+
		"\'\u0001\u0000\u0000\u0000\u0000)\u0001\u0000\u0000\u0000\u0000+\u0001"+
		"\u0000\u0000\u0000\u0000-\u0001\u0000\u0000\u0000\u0000/\u0001\u0000\u0000"+
		"\u0000\u00001\u0001\u0000\u0000\u0000\u00003\u0001\u0000\u0000\u0000\u0000"+
		"5\u0001\u0000\u0000\u0000\u00007\u0001\u0000\u0000\u0000\u00009\u0001"+
		"\u0000\u0000\u0000\u0000;\u0001\u0000\u0000\u0000\u0000=\u0001\u0000\u0000"+
		"\u0000\u0000C\u0001\u0000\u0000\u0000\u0000E\u0001\u0000\u0000\u0000\u0001"+
		"K\u0001\u0000\u0000\u0000\u0003U\u0001\u0000\u0000\u0000\u0005_\u0001"+
		"\u0000\u0000\u0000\u0007k\u0001\u0000\u0000\u0000\tq\u0001\u0000\u0000"+
		"\u0000\u000by\u0001\u0000\u0000\u0000\r\u007f\u0001\u0000\u0000\u0000"+
		"\u000f\u008b\u0001\u0000\u0000\u0000\u0011\u0093\u0001\u0000\u0000\u0000"+
		"\u0013\u009f\u0001\u0000\u0000\u0000\u0015\u00a7\u0001\u0000\u0000\u0000"+
		"\u0017\u00a9\u0001\u0000\u0000\u0000\u0019\u00b1\u0001\u0000\u0000\u0000"+
		"\u001b\u00b3\u0001\u0000\u0000\u0000\u001d\u00b5\u0001\u0000\u0000\u0000"+
		"\u001f\u00b7\u0001\u0000\u0000\u0000!\u00b9\u0001\u0000\u0000\u0000#\u00bb"+
		"\u0001\u0000\u0000\u0000%\u00bd\u0001\u0000\u0000\u0000\'\u00bf\u0001"+
		"\u0000\u0000\u0000)\u00c1\u0001\u0000\u0000\u0000+\u00c3\u0001\u0000\u0000"+
		"\u0000-\u00c5\u0001\u0000\u0000\u0000/\u00c8\u0001\u0000\u0000\u00001"+
		"\u00ca\u0001\u0000\u0000\u00003\u00cc\u0001\u0000\u0000\u00005\u00cf\u0001"+
		"\u0000\u0000\u00007\u00d2\u0001\u0000\u0000\u00009\u00d4\u0001\u0000\u0000"+
		"\u0000;\u00d7\u0001\u0000\u0000\u0000=\u00e3\u0001\u0000\u0000\u0000?"+
		"\u00e7\u0001\u0000\u0000\u0000A\u00e9\u0001\u0000\u0000\u0000C\u00ec\u0001"+
		"\u0000\u0000\u0000E\u00f2\u0001\u0000\u0000\u0000GH\u0005i\u0000\u0000"+
		"HL\u0005f\u0000\u0000IJ\u0005I\u0000\u0000JL\u0005F\u0000\u0000KG\u0001"+
		"\u0000\u0000\u0000KI\u0001\u0000\u0000\u0000L\u0002\u0001\u0000\u0000"+
		"\u0000MN\u0005t\u0000\u0000NO\u0005h\u0000\u0000OP\u0005e\u0000\u0000"+
		"PV\u0005n\u0000\u0000QR\u0005T\u0000\u0000RS\u0005H\u0000\u0000ST\u0005"+
		"E\u0000\u0000TV\u0005N\u0000\u0000UM\u0001\u0000\u0000\u0000UQ\u0001\u0000"+
		"\u0000\u0000V\u0004\u0001\u0000\u0000\u0000WX\u0005e\u0000\u0000XY\u0005"+
		"l\u0000\u0000YZ\u0005s\u0000\u0000Z`\u0005e\u0000\u0000[\\\u0005E\u0000"+
		"\u0000\\]\u0005L\u0000\u0000]^\u0005S\u0000\u0000^`\u0005E\u0000\u0000"+
		"_W\u0001\u0000\u0000\u0000_[\u0001\u0000\u0000\u0000`\u0006\u0001\u0000"+
		"\u0000\u0000ab\u0005w\u0000\u0000bc\u0005h\u0000\u0000cd\u0005i\u0000"+
		"\u0000de\u0005l\u0000\u0000el\u0005e\u0000\u0000fg\u0005W\u0000\u0000"+
		"gh\u0005H\u0000\u0000hi\u0005I\u0000\u0000ij\u0005L\u0000\u0000jl\u0005"+
		"E\u0000\u0000ka\u0001\u0000\u0000\u0000kf\u0001\u0000\u0000\u0000l\b\u0001"+
		"\u0000\u0000\u0000mn\u0005d\u0000\u0000nr\u0005o\u0000\u0000op\u0005D"+
		"\u0000\u0000pr\u0005O\u0000\u0000qm\u0001\u0000\u0000\u0000qo\u0001\u0000"+
		"\u0000\u0000r\n\u0001\u0000\u0000\u0000st\u0005l\u0000\u0000tu\u0005e"+
		"\u0000\u0000uz\u0005t\u0000\u0000vw\u0005L\u0000\u0000wx\u0005E\u0000"+
		"\u0000xz\u0005T\u0000\u0000ys\u0001\u0000\u0000\u0000yv\u0001\u0000\u0000"+
		"\u0000z\f\u0001\u0000\u0000\u0000{|\u0005i\u0000\u0000|\u0080\u0005n\u0000"+
		"\u0000}~\u0005I\u0000\u0000~\u0080\u0005N\u0000\u0000\u007f{\u0001\u0000"+
		"\u0000\u0000\u007f}\u0001\u0000\u0000\u0000\u0080\u000e\u0001\u0000\u0000"+
		"\u0000\u0081\u0082\u0005b\u0000\u0000\u0082\u0083\u0005e\u0000\u0000\u0083"+
		"\u0084\u0005g\u0000\u0000\u0084\u0085\u0005i\u0000\u0000\u0085\u008c\u0005"+
		"n\u0000\u0000\u0086\u0087\u0005B\u0000\u0000\u0087\u0088\u0005E\u0000"+
		"\u0000\u0088\u0089\u0005G\u0000\u0000\u0089\u008a\u0005I\u0000\u0000\u008a"+
		"\u008c\u0005N\u0000\u0000\u008b\u0081\u0001\u0000\u0000\u0000\u008b\u0086"+
		"\u0001\u0000\u0000\u0000\u008c\u0010\u0001\u0000\u0000\u0000\u008d\u008e"+
		"\u0005e\u0000\u0000\u008e\u008f\u0005n\u0000\u0000\u008f\u0094\u0005d"+
		"\u0000\u0000\u0090\u0091\u0005E\u0000\u0000\u0091\u0092\u0005N\u0000\u0000"+
		"\u0092\u0094\u0005D\u0000\u0000\u0093\u008d\u0001\u0000\u0000\u0000\u0093"+
		"\u0090\u0001\u0000\u0000\u0000\u0094\u0012\u0001\u0000\u0000\u0000\u0095"+
		"\u0096\u0005c\u0000\u0000\u0096\u0097\u0005o\u0000\u0000\u0097\u0098\u0005"+
		"n\u0000\u0000\u0098\u0099\u0005s\u0000\u0000\u0099\u00a0\u0005t\u0000"+
		"\u0000\u009a\u009b\u0005C\u0000\u0000\u009b\u009c\u0005O\u0000\u0000\u009c"+
		"\u009d\u0005N\u0000\u0000\u009d\u009e\u0005S\u0000\u0000\u009e\u00a0\u0005"+
		"T\u0000\u0000\u009f\u0095\u0001\u0000\u0000\u0000\u009f\u009a\u0001\u0000"+
		"\u0000\u0000\u00a0\u0014\u0001\u0000\u0000\u0000\u00a1\u00a2\u0005v\u0000"+
		"\u0000\u00a2\u00a3\u0005a\u0000\u0000\u00a3\u00a8\u0005r\u0000\u0000\u00a4"+
		"\u00a5\u0005V\u0000\u0000\u00a5\u00a6\u0005A\u0000\u0000\u00a6\u00a8\u0005"+
		"R\u0000\u0000\u00a7\u00a1\u0001\u0000\u0000\u0000\u00a7\u00a4\u0001\u0000"+
		"\u0000\u0000\u00a8\u0016\u0001\u0000\u0000\u0000\u00a9\u00aa\u0005:\u0000"+
		"\u0000\u00aa\u00ab\u0005=\u0000\u0000\u00ab\u0018\u0001\u0000\u0000\u0000"+
		"\u00ac\u00ad\u0005=\u0000\u0000\u00ad\u00ae\u0005!\u0000\u0000\u00ae\u00b2"+
		"\u0005=\u0000\u0000\u00af\u00b0\u0005!\u0000\u0000\u00b0\u00b2\u0005="+
		"\u0000\u0000\u00b1\u00ac\u0001\u0000\u0000\u0000\u00b1\u00af\u0001\u0000"+
		"\u0000\u0000\u00b2\u001a\u0001\u0000\u0000\u0000\u00b3\u00b4\u0005~\u0000"+
		"\u0000\u00b4\u001c\u0001\u0000\u0000\u0000\u00b5\u00b6\u0005:\u0000\u0000"+
		"\u00b6\u001e\u0001\u0000\u0000\u0000\u00b7\u00b8\u0005(\u0000\u0000\u00b8"+
		" \u0001\u0000\u0000\u0000\u00b9\u00ba\u0005)\u0000\u0000\u00ba\"\u0001"+
		"\u0000\u0000\u0000\u00bb\u00bc\u0005+\u0000\u0000\u00bc$\u0001\u0000\u0000"+
		"\u0000\u00bd\u00be\u0005-\u0000\u0000\u00be&\u0001\u0000\u0000\u0000\u00bf"+
		"\u00c0\u0005*\u0000\u0000\u00c0(\u0001\u0000\u0000\u0000\u00c1\u00c2\u0005"+
		"/\u0000\u0000\u00c2*\u0001\u0000\u0000\u0000\u00c3\u00c4\u0005%\u0000"+
		"\u0000\u00c4,\u0001\u0000\u0000\u0000\u00c5\u00c6\u0005=\u0000\u0000\u00c6"+
		"\u00c7\u0005=\u0000\u0000\u00c7.\u0001\u0000\u0000\u0000\u00c8\u00c9\u0005"+
		"<\u0000\u0000\u00c90\u0001\u0000\u0000\u0000\u00ca\u00cb\u0005>\u0000"+
		"\u0000\u00cb2\u0001\u0000\u0000\u0000\u00cc\u00cd\u0005<\u0000\u0000\u00cd"+
		"\u00ce\u0005=\u0000\u0000\u00ce4\u0001\u0000\u0000\u0000\u00cf\u00d0\u0005"+
		">\u0000\u0000\u00d0\u00d1\u0005=\u0000\u0000\u00d16\u0001\u0000\u0000"+
		"\u0000\u00d2\u00d3\u0005;\u0000\u0000\u00d38\u0001\u0000\u0000\u0000\u00d4"+
		"\u00d5\u0005,\u0000\u0000\u00d5:\u0001\u0000\u0000\u0000\u00d6\u00d8\u0005"+
		"_\u0000\u0000\u00d7\u00d6\u0001\u0000\u0000\u0000\u00d7\u00d8\u0001\u0000"+
		"\u0000\u0000\u00d8\u00d9\u0001\u0000\u0000\u0000\u00d9\u00df\u0003?\u001f"+
		"\u0000\u00da\u00de\u0003?\u001f\u0000\u00db\u00de\u0003A \u0000\u00dc"+
		"\u00de\u0005_\u0000\u0000\u00dd\u00da\u0001\u0000\u0000\u0000\u00dd\u00db"+
		"\u0001\u0000\u0000\u0000\u00dd\u00dc\u0001\u0000\u0000\u0000\u00de\u00e1"+
		"\u0001\u0000\u0000\u0000\u00df\u00dd\u0001\u0000\u0000\u0000\u00df\u00e0"+
		"\u0001\u0000\u0000\u0000\u00e0<\u0001\u0000\u0000\u0000\u00e1\u00df\u0001"+
		"\u0000\u0000\u0000\u00e2\u00e4\u0003A \u0000\u00e3\u00e2\u0001\u0000\u0000"+
		"\u0000\u00e4\u00e5\u0001\u0000\u0000\u0000\u00e5\u00e3\u0001\u0000\u0000"+
		"\u0000\u00e5\u00e6\u0001\u0000\u0000\u0000\u00e6>\u0001\u0000\u0000\u0000"+
		"\u00e7\u00e8\u0007\u0000\u0000\u0000\u00e8@\u0001\u0000\u0000\u0000\u00e9"+
		"\u00ea\u000209\u0000\u00eaB\u0001\u0000\u0000\u0000\u00eb\u00ed\u0007"+
		"\u0001\u0000\u0000\u00ec\u00eb\u0001\u0000\u0000\u0000\u00ed\u00ee\u0001"+
		"\u0000\u0000\u0000\u00ee\u00ec\u0001\u0000\u0000\u0000\u00ee\u00ef\u0001"+
		"\u0000\u0000\u0000\u00ef\u00f0\u0001\u0000\u0000\u0000\u00f0\u00f1\u0006"+
		"!\u0000\u0000\u00f1D\u0001\u0000\u0000\u0000\u00f2\u00f3\u0005/\u0000"+
		"\u0000\u00f3\u00f4\u0005/\u0000\u0000\u00f4\u00f8\u0001\u0000\u0000\u0000"+
		"\u00f5\u00f7\b\u0002\u0000\u0000\u00f6\u00f5\u0001\u0000\u0000\u0000\u00f7"+
		"\u00fa\u0001\u0000\u0000\u0000\u00f8\u00f6\u0001\u0000\u0000\u0000\u00f8"+
		"\u00f9\u0001\u0000\u0000\u0000\u00f9\u00fb\u0001\u0000\u0000\u0000\u00fa"+
		"\u00f8\u0001\u0000\u0000\u0000\u00fb\u00fc\u0006\"\u0000\u0000\u00fcF"+
		"\u0001\u0000\u0000\u0000\u0013\u0000KU_kqy\u007f\u008b\u0093\u009f\u00a7"+
		"\u00b1\u00d7\u00dd\u00df\u00e5\u00ee\u00f8\u0001\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}